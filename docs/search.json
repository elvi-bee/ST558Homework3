[
  {
    "objectID": "ST558HW3.html",
    "href": "ST558HW3.html",
    "title": "ST558HW3",
    "section": "",
    "text": "load(\"hw2_list.rda\")\n\nCreate a new column in each data frame of the list:\n\nbp_list$treatment$status &lt;- character(20)\nbp_list$placebo$status &lt;- character(10)\n\nFor the non-placebo data frame (treatment) within the list, create a for loop and use if/then/else logic to create the status column’s values.\n\nOptimal: bp ≤ 120\nBorderline: 120 &lt; bp ≤ 130\nHigh: &gt; 130\n\n\nfor (i in 1:20){\n\n    if(bp_list$treatment$post_bp[i] &lt;= 120) { \n      bp_list$treatment$status[i] &lt;- \"Optimal\"\n    } else if (bp_list$treatment$post_bp[i] &gt; 120 & bp_list$treatment$post_bp[i] &lt;= 130){\n      bp_list$treatment$status[i] &lt;- \"Borderline\"\n    } else if (bp_list$treatment$post_bp[i] &gt; 130) {\n      bp_list$treatment$status[i] &lt;- \"High\"\n    } else {\n      \"Error\"\n    }\n  }\n\nhead(bp_list$treatment)\n\n            patient pre_bp post_bp diff_bp normal     status\nSubject_1 Subject_1    120     127      -7  FALSE Borderline\nSubject_2 Subject_2    151     145       6  FALSE       High\nSubject_3 Subject_3    125     135     -10  FALSE       High\nSubject_4 Subject_4    126     122       4  FALSE Borderline\nSubject_5 Subject_5    115     115       0   TRUE    Optimal\nSubject_6 Subject_6    132     122      10  FALSE Borderline\n\n\nRepeat the previous steps for the placebo:\n\nfor (i in 1:10){\n\n    if(bp_list$placebo$post_bp[i] &lt;= 120) { \n      bp_list$placebo$status[i] &lt;- \"Optimal\"\n    } else if (bp_list$placebo$post_bp[i] &gt; 120 & bp_list$placebo$post_bp[i] &lt;= 130){\n      bp_list$placebo$status[i] &lt;- \"Borderline\"\n    } else if (bp_list$placebo$post_bp[i] &gt; 130) {\n      bp_list$placebo$status[i] &lt;- \"High\"\n    } else {\n      \"Error\"\n    }\n}\n\nhead(bp_list$placebo)\n\n    patient pre_bp post_bp diff_bp normal     status\n1 Subject_1    138     105      33   TRUE    Optimal\n2 Subject_2    135     136      -1  FALSE       High\n3 Subject_3    147     123      24  FALSE Borderline\n4 Subject_4    117     130     -13  FALSE Borderline\n5 Subject_5    152     134      18  FALSE       High\n6 Subject_6    134     143      -9  FALSE       High"
  },
  {
    "objectID": "ST558HW3.html#task-1-control-flow-practice",
    "href": "ST558HW3.html#task-1-control-flow-practice",
    "title": "ST558HW3",
    "section": "",
    "text": "load(\"hw2_list.rda\")\n\nCreate a new column in each data frame of the list:\n\nbp_list$treatment$status &lt;- character(20)\nbp_list$placebo$status &lt;- character(10)\n\nFor the non-placebo data frame (treatment) within the list, create a for loop and use if/then/else logic to create the status column’s values.\n\nOptimal: bp ≤ 120\nBorderline: 120 &lt; bp ≤ 130\nHigh: &gt; 130\n\n\nfor (i in 1:20){\n\n    if(bp_list$treatment$post_bp[i] &lt;= 120) { \n      bp_list$treatment$status[i] &lt;- \"Optimal\"\n    } else if (bp_list$treatment$post_bp[i] &gt; 120 & bp_list$treatment$post_bp[i] &lt;= 130){\n      bp_list$treatment$status[i] &lt;- \"Borderline\"\n    } else if (bp_list$treatment$post_bp[i] &gt; 130) {\n      bp_list$treatment$status[i] &lt;- \"High\"\n    } else {\n      \"Error\"\n    }\n  }\n\nhead(bp_list$treatment)\n\n            patient pre_bp post_bp diff_bp normal     status\nSubject_1 Subject_1    120     127      -7  FALSE Borderline\nSubject_2 Subject_2    151     145       6  FALSE       High\nSubject_3 Subject_3    125     135     -10  FALSE       High\nSubject_4 Subject_4    126     122       4  FALSE Borderline\nSubject_5 Subject_5    115     115       0   TRUE    Optimal\nSubject_6 Subject_6    132     122      10  FALSE Borderline\n\n\nRepeat the previous steps for the placebo:\n\nfor (i in 1:10){\n\n    if(bp_list$placebo$post_bp[i] &lt;= 120) { \n      bp_list$placebo$status[i] &lt;- \"Optimal\"\n    } else if (bp_list$placebo$post_bp[i] &gt; 120 & bp_list$placebo$post_bp[i] &lt;= 130){\n      bp_list$placebo$status[i] &lt;- \"Borderline\"\n    } else if (bp_list$placebo$post_bp[i] &gt; 130) {\n      bp_list$placebo$status[i] &lt;- \"High\"\n    } else {\n      \"Error\"\n    }\n}\n\nhead(bp_list$placebo)\n\n    patient pre_bp post_bp diff_bp normal     status\n1 Subject_1    138     105      33   TRUE    Optimal\n2 Subject_2    135     136      -1  FALSE       High\n3 Subject_3    147     123      24  FALSE Borderline\n4 Subject_4    117     130     -13  FALSE Borderline\n5 Subject_5    152     134      18  FALSE       High\n6 Subject_6    134     143      -9  FALSE       High"
  },
  {
    "objectID": "ST558HW3.html#task-2-function-writing",
    "href": "ST558HW3.html#task-2-function-writing",
    "title": "ST558HW3",
    "section": "Task 2: Function Writing",
    "text": "Task 2: Function Writing\nIntermediate R function that finds a summary of a numeric column) with the default value being set to mean.\n\nFindMeansFunction &lt;- function(bp_list) {\n    # takes in two data frames - treatment and placebo\n    treatment_df &lt;- bp_list$treatment\n    placebo_df   &lt;- bp_list$placebo\n      \n    # compute means of numeric columns\n    treatment_means &lt;- sapply(treatment_df[ , sapply(treatment_df, is.numeric)], mean, na.rm = TRUE)\n    placebo_means   &lt;- sapply(placebo_df[ , sapply(placebo_df, is.numeric)], mean, na.rm = TRUE)\n      \n    # rename them\n    names(treatment_means) &lt;- c(\"t_pre_bp\", \"t_post_bp\", \"t_diff_bp\")\n    names(placebo_means)   &lt;- c(\"p_pre_bp\", \"p_post_bp\", \"p_diff_bp\")\n      \n      \n       # put everything into a list\n    list_of_means &lt;- list(\n    treatment_means = treatment_means,\n    placebo_means   = placebo_means\n    )\n}\nResult &lt;- FindMeansFunction(bp_list)\nResult\n\n$treatment_means\n t_pre_bp t_post_bp t_diff_bp \n   131.60    125.95      5.65 \n\n$placebo_means\n p_pre_bp p_post_bp p_diff_bp \n    131.9     128.9       3.0 \n\n\n\nFinal R function that finds the statistic of interest (as defined by the user input) for the pre, post, and diff columns of both data frames.\n\n\n GetSummaryStat &lt;- function(bp_list, stat = \"mean\") {\n    my_fun &lt;- get(stat)\n      \n    treatment_vals &lt;- sapply(bp_list$treatment[ , sapply(bp_list$treatment, is.numeric)], my_fun, na.rm = TRUE)\n    placebo_vals   &lt;- sapply(bp_list$placebo[ , sapply(bp_list$placebo, is.numeric)], my_fun, na.rm = TRUE)\n      \n    combined &lt;- c(treatment_vals, placebo_vals)\n      \n    # rename results\n    names(combined) &lt;- c(\"t_pre_bp\", \"t_post_bp\", \"t_diff_bp\",\"p_pre_bp\", \"p_post_bp\", \"p_diff_bp\")\n\n    # printing the statistic name\n    if (stat == \"mean\") {\n      print(\"Mean\")\n    } else if (stat == \"sd\") {\n      print(\"Standard Deviation\")\n    } else if (stat == \"var\") {\n      print(\"Variance\")\n    } else if (stat == \"min\") {\n      print(\"Minimum\")\n    } else if (stat == \"max\") {\n      print(\"Maximum\")\n    } else {\n      print(\"Unknown\")\n    }\n    \n      #return(combined)\n      return(as.list(combined))\n  }\n\nApply the final R function:\n\nGetSummaryStat(bp_list, \"var\") \n\n[1] \"Variance\"\n\n\n$t_pre_bp\n[1] 75.72632\n\n$t_post_bp\n[1] 78.99737\n\n$t_diff_bp\n[1] 117.8184\n\n$p_pre_bp\n[1] 149.8778\n\n$p_post_bp\n[1] 124.9889\n\n$p_diff_bp\n[1] 341.3333"
  }
]